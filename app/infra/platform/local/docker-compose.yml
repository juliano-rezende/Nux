name: nux-platform-local

networks:
  nux_net:
    name: nux_net

volumes:
  pg_keycloak_data:

services:
  # =========================
  # Keycloak + Postgres
  # =========================
  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: ${KC_DB}
      POSTGRES_USER: ${KC_DB_USER}
      POSTGRES_PASSWORD: ${KC_DB_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KC_DB_USER} -d ${KC_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports:
      - "5433:5432"
    volumes:
      - pg_keycloak_data:/var/lib/postgresql/data
    networks: [nux_net]

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    depends_on:
      keycloak-db:
        condition: service_healthy
    command: >
      start-dev
      --http-enabled=true
      --import-realm
      --hostname-strict=false
      --hostname-strict-https=false
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/${KC_DB}
      KC_DB_USERNAME: ${KC_DB_USER}
      KC_DB_PASSWORD: ${KC_DB_PASS}
      KEYCLOAK_ADMIN: ${KC_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASS}
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: INFO
    ports:
      - "${KC_HTTP_PORT}:8080"
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health/ready >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    networks: [nux_net]

  # =========================
  # Kong (DB-less)
  # =========================
  kong:
    image: kong:3.7
    container_name: kong
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      KONG_DATABASE: "off"
      # aponte para o ARQUIVO que está dentro da pasta montada
      KONG_DECLARATIVE_CONFIG: /kong/nux-kong.yaml
      KONG_LOG_LEVEL: ${KONG_LOG_LEVEL}
      KONG_PROXY_LISTEN: "0.0.0.0:${KONG_PROXY_HTTP}"
      KONG_PROXY_LISTEN_SSL: "0.0.0.0:${KONG_PROXY_HTTPS}"
      KONG_ADMIN_LISTEN: "0.0.0.0:${KONG_ADMIN_HTTP}"
      KONG_ENFORCE_RBAC: "off"
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    ports:
      - "${KONG_PROXY_HTTP}:${KONG_PROXY_HTTP}"
      - "${KONG_PROXY_HTTPS}:${KONG_PROXY_HTTPS}"
      - "${KONG_ADMIN_HTTP}:${KONG_ADMIN_HTTP}"
    # monte a PASTA local (infra/platform/local/kong) em /kong
    volumes:
      - ./kong:/kong:ro
    networks: [nux_net]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${KONG_ADMIN_HTTP}/status >/dev/null || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 40
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # =========================
  # decK (opcional) - aplica nux-kong.yaml via Admin API
  # =========================
  deck:
    image: kong/deck:latest
    container_name: kong-deck
    depends_on:
      kong:
        condition: service_healthy
    networks: [nux_net]
    environment:
      # como está no mesmo network, use o nome do serviço
      DECK_KONG_ADDR: http://kong:${KONG_ADMIN_HTTP}
    volumes:
      - ./kong:/state:ro
    # aponta para o mesmo arquivo que o Kong carrega
    command: ["sync", "--state", "/state/nux-kong.yaml"]
